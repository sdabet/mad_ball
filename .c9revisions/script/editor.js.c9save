{"ts":1343980520729,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"if(location.hash) {\n    // Redirect to use hash as query string\n    location.href = \"http://\" + location.host + location.pathname + \"?\" + location.hash.substring(1);\n}\nelse {\n\n    var board = document.getElementById(\"board\");\n    var level = new Level(board);\n    \n    var grid = true;\n\n    var openPlayUrl = function() {\n        console.log(\"openPlayUrl()\");\n        var url = \"index.html?\" + level.serialize();\n        window.open(url, \"_blank\");\n    }\n    \n    var updateSerialization = function() {\n        console.log(\"updateSerialization()\");\n        var serialization_with_images = level.serialize(true);\n        var serialization_without_images = level.serialize(false);\n        document.getElementById(\"serialization_with_images\").innerHTML = serialization_with_images;\n        document.getElementById(\"serialization_without_images\").innerHTML = serialization_without_images;\n        document.getElementById(\"serialization_without_images_img\").src = \"http://qrcode.kaywa.com/img.php?s=4&d=\" + encodeURIComponent(serialization_without_images);\n        location.hash = serialization_with_images;\n\n    \tparent.window.postMessage(serialization_without_images, \"*\");\n    }\n    \n    document.getElementById(\"dim_editor\").addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        level.lines = document.getElementById(\"lines_field\").value;\n        board.style.height = document.getElementById(\"board_height_field\").value + \"px\";\n        location.href = \"editor.html?\" + level.serialize(false);\n        return false;\n    });\n    \n    var selectedAnimation = function() {\n        return document.getElementById(\"animation_field\").value;\n    };\n    var onAnimationChanged = function() {\n        var animation = selectedAnimation();\n        if(selection != \"erase\" && selection != \"move\") {\n            if(animation == \"h\") cursor.src = imgUrls[\"horizontal\"];\n            else if(animation == \"v\") cursor.src = imgUrls[\"vertical\"];\n            else cursor.src = imgStore[selection].src;\n        }\n    };\n    document.getElementById(\"animation_field\").addEventListener(\"change\", onAnimationChanged);\n    \n    level.unserialize(window.location.search.substring(1));\n    updateSerialization();\n    \n    /* Item buttons */\n    var onItemSelected = function() {\n        console.log(\"select()\");\n        for(var i=0; i<selectables.length; i++) {\n            selectables[i].classList.remove(\"down\");\n        }\n        selection = this.getAttribute(\"type\");\n        this.classList.add(\"down\");\n        \n        if(selection == \"erase\") {\n            cursor.src = \"images/editor_erase.png\";\n            cursor.style.backgroundImage = \"url('images/editor_erase.png')\";\n        }\n        else if(selection == \"move\") {\n            cursor.src = \"images/editor_hand.png\";\n            cursor.style.backgroundImage = \"url('images/editor_hand.png')\";\n        }\n        else {\n            cursor.src = imgStore[selection].src;\n            cursor.style.backgroundImage = \"url('\" + imgStore[selection].src + \"')\";\n            onAnimationChanged();\n        }\n    }\n    var selection;\n    var selectables = document.getElementsByClassName(\"selectable\");\n    for(var i=0; i<selectables.length; i++) {\n        selectables[i].addEventListener(\"click\", onItemSelected);\n    }\n    \n    /* Cursor management */\n    var movingItem = null;\n    var cursor = document.getElementById(\"cursor\");\n    cursor.width = level.unitHeight();\n    cursor.height = level.unitHeight();\n    board.onmouseover = function() {\n        cursor.style.visibility = \"visible\";\n    }\n    board.onmouseout = function() {\n        cursor.style.visibility = \"hidden\";\n    }\n    board.onmousemove = function(e) {\n        var unitHeight = level.unitHeight();\n        var x = Math.max(0,Math.min(level.boardWidth()-unitHeight, parseInt(e.pageX - board.offsetLeft - container.offsetLeft - unitHeight/2)));\n        var y = parseInt(e.pageY - board.offsetTop - container.offsetTop);\n        y -= y % unitHeight;\n        if(grid) x-= x % unitHeight;\n        \n        if(y < level.lines * unitHeight) {\n            cursor.style.left = x + \"px\";\n            cursor.style.top = y + \"px\";\n            \n            if(movingItem) {\n                movingItem.x = x;\n                movingItem.y = y;\n                \n                var itemEl = movingItem.dom;\n                itemEl.style.left = movingItem.x + \"px\";\n        \t\titemEl.style.top = movingItem.y + \"px\";\n            }\n        }\n    };\n\n    onItemSelected.apply(document.getElementById(\"default_selectable\"));\n\n    board.onmouseup= function(e) {\n        var unitHeight = level.unitHeight();\n        var x = Math.max(0,Math.min(level.boardWidth()-unitHeight, parseInt(e.pageX - board.offsetLeft - container.offsetLeft - unitHeight/2)));\n        var y = parseInt(e.pageY - board.offsetTop - container.offsetTop);\n        y -= y % unitHeight;\n        if(grid) x-= x % unitHeight;\n        console.log(\"onmouseup: (\" + x + \",\" + y + \")\");\n    \n        if(selection.length > 0) {\n            if(selection == \"erase\") {\n                level.removeItemsAtPosition(x,y);\n            }\n            else if(selection ==\"move\") {\n                movingItem = null;\n            }\n            else {\n                if(level.getItemAtPosition(x,y) == null) {\n                    level.addItem(selection, x, y, selectedAnimation(), 0);\n                }\n                else {\n                    alert(\"Sorry, there is already an item on this position!\");\n                }\n            }\n        }\n        updateSerialization();\n    };\n    \n    board.onmousedown= function(e) {\n        var unitHeight = level.unitHeight();\n        var x = Math.max(0,Math.min(level.boardWidth()-unitHeight, parseInt(e.pageX - board.offsetLeft - container.offsetLeft - unitHeight/2)));\n        var y = parseInt(e.pageY - board.offsetTop - container.offsetTop);\n        y -= y % unitHeight;\n        if(grid) x-= x % unitHeight;\n        console.log(\"onmousedown: (\" + x + \",\" + y + \")\");\n        \n        if(selection == \"move\") {\n            movingItem = level.getItemAtPosition(x,y); \n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    \n    /* Dimension editor */\n    var widthField = document.querySelector(\"#board_width_field\");\n    widthField.value = level.boardWidth();\n    var heightField = document.querySelector(\"#board_height_field\");\n    heightField.value = level.boardHeight();\n    var linesField = document.querySelector(\"#lines_field\");\n    linesField.value = level.lines;\n    \n    linesField.addEventListener('change', function() {\n        heightField.value = 32 * linesField.value;\n    });\n    \n    /* Images editors */\n    function handleFileSelect(evt, callback) {\n        var files = evt.target.files; // FileList object\n        \n        if(files.length > 0) {\n            var f = files[0];\n        \n            // Only process image files.\n            if (!f.type.match('image.*')) {\n                alert(\"This file is not an image\");\n                return;\n            }\n            \n            var reader = new FileReader();\n            \n            // Closure to capture the file information.\n            reader.onload = \n                function(e) {\n                    Resample(e.target.result, level.unitHeight(), level.unitHeight(), function(data) {\n                        callback(data);\n                    });\n                };\n            \n            // Read in the image file as a data URL.\n            reader.readAsDataURL(f);\n        }\n    }\n    for(var i=0; i<itemTypes.length; i++) {\n        var type = itemTypes[i];\n        var itemUrlField = document.getElementById(type + \"_url_field\");\n        var updateItemPreview = function() {\n            var url = itemUrlField.value;\n            level.setTypeUrl(type, url);\n            updateSerialization();\n        };\n        itemUrlField.addEventListener(\"change\", updateItemPreview);\n        itemUrlField.value = imgStore[type].src;\n        updateItemPreview();\n        document.getElementById(type + \"_file_field\").addEventListener('change', function(e) {\n            handleFileSelect(e, function(data) {\n                itemUrlField.value = data;\n                level.setTypeUrl(type, data);\n                updateSerialization();\n            })\n        }, false);\n    }\n    \n    /* Title editor */\n    var titleField = document.getElementById(\"title_field\");\n    titleField.value = level.title;\n    titleField.addEventListener(\"change\", function() {\n        level.title = titleField.value;\n        updateSerialization();\n    });\n    \n    /* Time editors */\n    var time1Field = document.getElementById(\"time1_field\");\n    time1Field.value = level.time1;\n    time1Field.addEventListener(\"change\", function() {\n        level.time1 = time1Field.value;\n        updateSerialization();\n    });\n    var time2Field = document.getElementById(\"time2_field\");\n    time2Field.value = level.time2;\n    time2Field.addEventListener(\"change\", function() {\n        level.time2 = time2Field.value;\n        updateSerialization();\n    });\n    \n    /* Background editor */\n    var backgroundField = document.getElementById(\"background_field\");\n    backgroundField.value = level.backgroundUrl();\n    backgroundField.addEventListener(\"change\", function() {\n        board.style.backgroundImage = \"url('\" + backgroundField.value + \"')\";\n        updateSerialization();\n    });\n    \n    /* Grid */\n    var gridField = document.getElementById(\"grid_field\");\n    gridField.checked = grid;\n    gridField.addEventListener(\"click\", function() {\n        grid = gridField.checked;\n    });\n}"]],"start1":0,"start2":0,"length1":0,"length2":9564}]],"length":9564}
{"contributors":[],"silentsave":false,"ts":1343980643279,"patch":[[{"diffs":[[0,"        "],[-1,"if("],[1,"var existingItem = "],[0,"level.ge"]],"start1":5206,"start2":5206,"length1":19,"length2":35},{"diffs":[[0,"ion(x,y)"],[-1," ="],[1,";\n                if(existingItem !"],[0,"= null) "]],"start1":5253,"start2":5253,"length1":18,"length2":51},{"diffs":[[0,"vel."],[-1,"addItem(selection, x, y, selectedAnimation(), 0);\n                }\n                else {\n                    alert(\"Sorry, there is already an item on this position!\");\n                }"],[1,"removeItem(existingItem);\n                }\n                level.addItem(selection, x, y, selectedAnimation(), 0);"],[0,"\n   "]],"start1":5328,"start2":5328,"length1":196,"length2":123}]],"length":9540,"saved":false}
{"ts":1343980655846,"patch":[[{"diffs":[[0,"              }\n"],[1,"                \n"],[0,"                "]],"start1":5360,"start2":5360,"length1":32,"length2":49}]],"length":9557,"saved":false}
{"ts":1343980844569,"patch":[[{"diffs":[[0,"    "],[-1,"var existingItem = level.get"],[1,"level.remove"],[0,"Item"],[1,"s"],[0,"AtPo"]],"start1":5210,"start2":5210,"length1":40,"length2":25},{"diffs":[[0,"y);\n"],[-1,"                if(existingItem != null) {\n                    level.removeItem(existingItem);\n                }\n                \n"],[0,"    "]],"start1":5244,"start2":5244,"length1":138,"length2":8}]],"length":9412,"saved":false}
